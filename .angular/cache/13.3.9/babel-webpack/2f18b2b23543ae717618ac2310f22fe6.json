{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, Injectable, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpResponse, HttpClientModule, HttpClientJsonpModule, HTTP_INTERCEPTORS, HttpEventType } from '@angular/common/http';\nimport { of, tap, EMPTY, BehaviorSubject, retry, map, catchError as catchError$1, throwError, finalize, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i2 from '@angular/material/progress-bar';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nfunction ProgressComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"section\", 2);\n    i0.ɵɵelement(2, \"mat-progress-bar\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"color\", ctx_r0.color)(\"mode\", ctx_r0.mode)(\"value\", ctx_r0.loader.progress)(\"bufferValue\", ctx_r0.loader.bufferValue);\n  }\n}\n\nclass ApiLibComponent {\n  constructor() {}\n\n  ngOnInit() {}\n\n}\n\nApiLibComponent.ɵfac = function ApiLibComponent_Factory(t) {\n  return new (t || ApiLibComponent)();\n};\n\nApiLibComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ApiLibComponent,\n  selectors: [[\"lib-api-lib\"]],\n  decls: 2,\n  vars: 0,\n  template: function ApiLibComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \" api-lib works! \");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ApiLibComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-api-lib',\n      template: `\n    <p>\n      api-lib works!\n    </p>\n  `,\n      styles: []\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass CacheResolverService {\n  constructor() {\n    // we will store HttpResponse in a map with key as unique identifire.\n    // this will be acting as a identifire and it will hold the list of responses.\n    this.cache = new Map();\n  }\n\n  set(key, value, timeToLive = null) {\n    console.log('set cache key', key);\n\n    if (timeToLive) {\n      const expiresIn = new Date();\n      expiresIn.setSeconds(expiresIn.getSeconds() + timeToLive); // if we dont have to expire then put null here.\n\n      this.cache.set(key, [expiresIn, value]);\n    }\n  }\n\n  get(key) {\n    const tuple = this.cache.get(key);\n    if (!tuple) return null; // extract tuple.\n\n    const expiresIn = tuple[0];\n    const httpSavedResponse = tuple[1];\n    const timeNow = new Date();\n\n    if (expiresIn && expiresIn.getTime() < timeNow.getTime()) {\n      this.cache.delete(key);\n      return null;\n    }\n\n    return httpSavedResponse;\n  }\n\n}\n\nCacheResolverService.ɵfac = function CacheResolverService_Factory(t) {\n  return new (t || CacheResolverService)();\n};\n\nCacheResolverService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CacheResolverService,\n  factory: CacheResolverService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CacheResolverService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nconst TIME_TO_LIVE = 10;\n\nclass CacheInterceptor {\n  constructor(cacheResolver) {\n    this.cacheResolver = cacheResolver;\n  }\n\n  intercept(request, next) {\n    if (request.method != 'GET') {\n      return next.handle(request);\n    }\n\n    const cachedResponse = this.cacheResolver.get(request.url);\n    return cachedResponse ? of(cachedResponse) : this.sendRequest(request, next);\n  }\n\n  sendRequest(request, next) {\n    return next.handle(request).pipe(tap(event => {\n      if (event instanceof HttpResponse) {\n        this.cacheResolver.set(request.url, event, TIME_TO_LIVE);\n      }\n    }));\n  }\n\n}\n\nCacheInterceptor.ɵfac = function CacheInterceptor_Factory(t) {\n  return new (t || CacheInterceptor)(i0.ɵɵinject(CacheResolverService));\n};\n\nCacheInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CacheInterceptor,\n  factory: CacheInterceptor.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CacheInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: CacheResolverService\n    }];\n  }, null);\n})();\n\nclass ErrorInterceptor {\n  constructor() {}\n\n  intercept(request, next) {\n    return next.handle(request).pipe(catchError(error => {\n      if (error.error instanceof Error) {\n        // A client-side or network error occurred. Handle it accordingly.\n        console.error('An error occurred:', error.error.message);\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        console.error(`Backend returned code ${error.status}, body was: ${error.error}`);\n      } // If you want to return a new response:\n      // return of(new HttpResponse({body: [{name: \"Default value...\"}]}));\n      // If you want to return the error on the upper level:\n      // return throwError(error);\n      // or just return nothing:\n\n\n      return EMPTY;\n    }));\n  }\n\n}\n\nErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) {\n  return new (t || ErrorInterceptor)();\n};\n\nErrorInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ErrorInterceptor,\n  factory: ErrorInterceptor.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ErrorInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass CustomHeaderInterceptor {\n  constructor() {}\n\n  intercept(req, next) {\n    const api_key = \"jgs\";\n    const token = \"000111\";\n    /*const reqWithAuth = req.clone({\n      setHeaders:{\n        api_key,\n        Authorization:`Bearer${token}`\n      }\n    });*/\n\n    return next.handle(req);\n  }\n\n}\n\nCustomHeaderInterceptor.ɵfac = function CustomHeaderInterceptor_Factory(t) {\n  return new (t || CustomHeaderInterceptor)();\n};\n\nCustomHeaderInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CustomHeaderInterceptor,\n  factory: CustomHeaderInterceptor.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomHeaderInterceptor, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass LoaderService {\n  constructor() {\n    this.isLoading = new BehaviorSubject(false);\n    this.progress = 0;\n    this.bufferValue = 0;\n    this.isLoading.subscribe(res => {\n      console.log(\"LOADING: \", res);\n    });\n  }\n\n}\n\nLoaderService.ɵfac = function LoaderService_Factory(t) {\n  return new (t || LoaderService)();\n};\n\nLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LoaderService,\n  factory: LoaderService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass ResponseInterceptor {\n  constructor(loaderService) {\n    this.loaderService = loaderService;\n  }\n\n  intercept(request, next) {\n    const startTime = new Date().getTime();\n    this.loaderService.isLoading.next(true);\n    return next.handle(request).pipe(retry(2), map(event => {\n      const endTime = new Date().getTime();\n      const difference = endTime - startTime;\n      console.log(`${event.url} succeed in ${difference} ms.`);\n      return event;\n    }), catchError$1(error => {\n      return throwError(() => {\n        new Error('Test');\n      });\n    }), finalize(() => {\n      this.loaderService.isLoading.next(false);\n    }));\n  }\n\n}\n\nResponseInterceptor.ɵfac = function ResponseInterceptor_Factory(t) {\n  return new (t || ResponseInterceptor)(i0.ɵɵinject(LoaderService));\n};\n\nResponseInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ResponseInterceptor,\n  factory: ResponseInterceptor.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResponseInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: LoaderService\n    }];\n  }, null);\n})();\n\nclass ProgressComponent {\n  constructor(loader) {\n    this.loader = loader;\n    this.color = 'primary';\n    this.mode = 'buffer';\n    this.value = 50;\n    this.bufferValue = 75;\n    this.loading = false;\n  }\n\n  ngOnInit() {\n    this.loader.isLoading.subscribe(res => {\n      this.loading = res;\n      this.value = this.loader.progress;\n      this.bufferValue = this.loader.bufferValue;\n    });\n  }\n\n}\n\nProgressComponent.ɵfac = function ProgressComponent_Factory(t) {\n  return new (t || ProgressComponent)(i0.ɵɵdirectiveInject(LoaderService));\n};\n\nProgressComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ProgressComponent,\n  selectors: [[\"lib-progress\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"progress\", 4, \"ngIf\"], [1, \"progress\"], [1, \"example-section\"], [1, \"example-margin\", 3, \"color\", \"mode\", \"value\", \"bufferValue\"]],\n  template: function ProgressComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ProgressComponent_div_0_Template, 3, 4, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", true);\n    }\n  },\n  directives: [i3.NgIf, i2.MatProgressBar],\n  styles: [\".example-h2[_ngcontent-%COMP%]{margin:10px}.example-section[_ngcontent-%COMP%]{display:flex;align-content:center;align-items:center;height:60px}.example-margin[_ngcontent-%COMP%]{margin:0 10px}.progress[_ngcontent-%COMP%]{width:100%;background-color:orange;z-index:1000;position:absolute}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-progress',\n      template: \"\\n\\n  <div *ngIf=\\\"true\\\" class=\\\"progress\\\">\\n      \\n      <section class=\\\"example-section\\\">\\n        <mat-progress-bar\\n            class=\\\"example-margin\\\"\\n            [color]=\\\"color\\\"\\n            [mode]=\\\"mode\\\"\\n            [value]=\\\"loader.progress\\\"\\n            [bufferValue]=\\\"loader.bufferValue\\\">\\n        </mat-progress-bar>\\n      </section>\\n  </div>\",\n      styles: [\".example-h2{margin:10px}.example-section{display:flex;align-content:center;align-items:center;height:60px}.example-margin{margin:0 10px}.progress{width:100%;background-color:orange;z-index:1000;position:absolute}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: LoaderService\n    }];\n  }, null);\n})();\n\nclass ApiLibModule {}\n\nApiLibModule.ɵfac = function ApiLibModule_Factory(t) {\n  return new (t || ApiLibModule)();\n};\n\nApiLibModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ApiLibModule\n});\nApiLibModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [CacheResolverService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: CustomHeaderInterceptor,\n    multi: true\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: CacheInterceptor,\n    multi: true\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorInterceptor,\n    multi: true\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ResponseInterceptor,\n    multi: true\n  }],\n  imports: [[HttpClientModule, HttpClientJsonpModule, MatProgressBarModule, CommonModule], CommonModule, MatProgressBarModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ApiLibModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ApiLibComponent, ProgressComponent],\n      imports: [HttpClientModule, HttpClientJsonpModule, MatProgressBarModule, CommonModule],\n      exports: [CommonModule, ApiLibComponent, ProgressComponent, MatProgressBarModule],\n      providers: [CacheResolverService, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: CustomHeaderInterceptor,\n        multi: true\n      }, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: CacheInterceptor,\n        multi: true\n      }, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: ErrorInterceptor,\n        multi: true\n      }, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: ResponseInterceptor,\n        multi: true\n      }]\n    }]\n  }], null, null);\n})();\n\nconst BASICTOKEN = 'eXV6ZWVfY2xpZW50OjI5MDIzNmNmLTgxZDItNDg5MS1hYmNlLWYzZmUzYzA5NWMxMA=='; //export const SERVER_IP = 'backend-development.digitalmall.app';\n\nconst SERVER_IP = 'backend-development.digitalmall.app';\n\nclass JGSApiService {\n  // CONSTRUCTOR API SERVICE\n  constructor(http, loader) {\n    this.http = http;\n    this.loader = loader;\n    this.tokenName = 'dm-token';\n    this.language = 'lang';\n    this.getTokenUrl = 'sessions/token';\n    this.appBaseUrl = `https://${SERVER_IP}/api/`;\n    this.getTokenAccess = {};\n    this.headersConfig = {};\n    this.errorSubscriber = new Subject();\n\n    this.postImages = route => {\n      return this.http.post(this.appBaseUrl + route.apiroute, route.data, {\n        headers: this.headersConfig,\n        reportProgress: true,\n        observe: 'events'\n      }).subscribe(event => {\n        if (event.type === HttpEventType.UploadProgress) {\n          let progress = Math.round(event.loaded / event.total * 100) + '%';\n          this.loader.progress = Math.round(event.loaded / event.total * 100);\n          console.log(\"PROGRESS: \", progress);\n          this.loader.isLoading.next(true); //console.log('Uploading:' + Math.round(event.loaded/ event.total! *100) + '%');\n\n          if (event.loaded == event.total) {\n            this.loader.isLoading.next(false);\n            console.log(\"Event Loaded\", event);\n          }\n        }\n      });\n    };\n  }\n\n  getRequestTest() {\n    return this.http.get('https://backend-development.digitalmall.app/api/vehicle-for-sale/post-statuses', {\n      responseType: 'text'\n    }).pipe(tap({\n      next: data => console.log(data)\n    }));\n  }\n\n}\n\nJGSApiService.ɵfac = function JGSApiService_Factory(t) {\n  return new (t || JGSApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(LoaderService));\n};\n\nJGSApiService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: JGSApiService,\n  factory: JGSApiService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(JGSApiService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: LoaderService\n    }];\n  }, null);\n})();\n\nclass MediaService {\n  constructor(api) {\n    this.api = api;\n  }\n\n  uploadFile(formData, media_type, entity_id) {\n    let apiRoute = {};\n    apiRoute.apiroute = `storage/${media_type}/${entity_id}`;\n    apiRoute.data = formData;\n    return this.api.postImages(apiRoute);\n  }\n\n}\n\nMediaService.ɵfac = function MediaService_Factory(t) {\n  return new (t || MediaService)(i0.ɵɵinject(JGSApiService));\n};\n\nMediaService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MediaService,\n  factory: MediaService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MediaService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: JGSApiService\n    }];\n  }, null);\n})();\n/*\n * Public API Surface of api-lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ApiLibComponent, ApiLibModule, MediaService, ProgressComponent };","map":{"version":3,"sources":["/Users/junaidsatti/pak-trade-shared-lib/dist/api-lib/fesm2015/api-package.mjs"],"names":["i0","Component","Injectable","NgModule","i1","HttpResponse","HttpClientModule","HttpClientJsonpModule","HTTP_INTERCEPTORS","HttpEventType","of","tap","EMPTY","BehaviorSubject","retry","map","catchError","catchError$1","throwError","finalize","Subject","i2","MatProgressBarModule","i3","CommonModule","ApiLibComponent","constructor","ngOnInit","ɵfac","ɵcmp","type","args","selector","template","styles","CacheResolverService","cache","Map","set","key","value","timeToLive","console","log","expiresIn","Date","setSeconds","getSeconds","get","tuple","httpSavedResponse","timeNow","getTime","delete","ɵprov","TIME_TO_LIVE","CacheInterceptor","cacheResolver","intercept","request","next","method","handle","cachedResponse","url","sendRequest","pipe","event","ErrorInterceptor","error","Error","message","status","CustomHeaderInterceptor","req","api_key","token","providedIn","LoaderService","isLoading","progress","bufferValue","subscribe","res","ResponseInterceptor","loaderService","startTime","endTime","difference","ProgressComponent","loader","color","mode","loading","NgIf","MatProgressBar","ApiLibModule","ɵmod","ɵinj","provide","useClass","multi","declarations","imports","exports","providers","BASICTOKEN","SERVER_IP","JGSApiService","http","tokenName","language","getTokenUrl","appBaseUrl","getTokenAccess","headersConfig","errorSubscriber","postImages","route","post","apiroute","data","headers","reportProgress","observe","UploadProgress","Math","round","loaded","total","getRequestTest","responseType","HttpClient","MediaService","api","uploadFile","formData","media_type","entity_id","apiRoute"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, Injectable, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpResponse, HttpClientModule, HttpClientJsonpModule, HTTP_INTERCEPTORS, HttpEventType } from '@angular/common/http';\nimport { of, tap, EMPTY, BehaviorSubject, retry, map, catchError as catchError$1, throwError, finalize, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i2 from '@angular/material/progress-bar';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass ApiLibComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nApiLibComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ApiLibComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nApiLibComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ApiLibComponent, selector: \"lib-api-lib\", ngImport: i0, template: `\n    <p>\n      api-lib works!\n    </p>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ApiLibComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-api-lib',\n                    template: `\n    <p>\n      api-lib works!\n    </p>\n  `,\n                    styles: []\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass CacheResolverService {\n    constructor() {\n        // we will store HttpResponse in a map with key as unique identifire.\n        // this will be acting as a identifire and it will hold the list of responses.\n        this.cache = new Map();\n    }\n    set(key, value, timeToLive = null) {\n        console.log('set cache key', key);\n        if (timeToLive) {\n            const expiresIn = new Date();\n            expiresIn.setSeconds(expiresIn.getSeconds() + timeToLive);\n            // if we dont have to expire then put null here.\n            this.cache.set(key, [expiresIn, value]);\n        }\n    }\n    get(key) {\n        const tuple = this.cache.get(key);\n        if (!tuple)\n            return null;\n        // extract tuple.\n        const expiresIn = tuple[0];\n        const httpSavedResponse = tuple[1];\n        const timeNow = new Date();\n        if (expiresIn && expiresIn.getTime() < timeNow.getTime()) {\n            this.cache.delete(key);\n            return null;\n        }\n        return httpSavedResponse;\n    }\n}\nCacheResolverService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CacheResolverService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nCacheResolverService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CacheResolverService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CacheResolverService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\nconst TIME_TO_LIVE = 10;\nclass CacheInterceptor {\n    constructor(cacheResolver) {\n        this.cacheResolver = cacheResolver;\n    }\n    intercept(request, next) {\n        if (request.method != 'GET') {\n            return next.handle(request);\n        }\n        const cachedResponse = this.cacheResolver.get(request.url);\n        return cachedResponse ? of(cachedResponse) : this.sendRequest(request, next);\n    }\n    sendRequest(request, next) {\n        return next.handle(request)\n            .pipe(tap((event) => {\n            if (event instanceof HttpResponse) {\n                this.cacheResolver.set(request.url, event, TIME_TO_LIVE);\n            }\n        }));\n    }\n}\nCacheInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CacheInterceptor, deps: [{ token: CacheResolverService }], target: i0.ɵɵFactoryTarget.Injectable });\nCacheInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CacheInterceptor });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CacheInterceptor, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: CacheResolverService }]; } });\n\nclass ErrorInterceptor {\n    constructor() { }\n    intercept(request, next) {\n        return next.handle(request).pipe(catchError((error) => {\n            if (error.error instanceof Error) {\n                // A client-side or network error occurred. Handle it accordingly.\n                console.error('An error occurred:', error.error.message);\n            }\n            else {\n                // The backend returned an unsuccessful response code.\n                // The response body may contain clues as to what went wrong,\n                console.error(`Backend returned code ${error.status}, body was: ${error.error}`);\n            }\n            // If you want to return a new response:\n            // return of(new HttpResponse({body: [{name: \"Default value...\"}]}));\n            // If you want to return the error on the upper level:\n            // return throwError(error);\n            // or just return nothing:\n            return EMPTY;\n        }));\n    }\n}\nErrorInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ErrorInterceptor, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nErrorInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ErrorInterceptor });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ErrorInterceptor, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\nclass CustomHeaderInterceptor {\n    constructor() { }\n    intercept(req, next) {\n        const api_key = \"jgs\";\n        const token = \"000111\";\n        /*const reqWithAuth = req.clone({\n          setHeaders:{\n            api_key,\n            Authorization:`Bearer${token}`\n          }\n        });*/\n        return next.handle(req);\n    }\n}\nCustomHeaderInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CustomHeaderInterceptor, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nCustomHeaderInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CustomHeaderInterceptor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CustomHeaderInterceptor, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass LoaderService {\n    constructor() {\n        this.isLoading = new BehaviorSubject(false);\n        this.progress = 0;\n        this.bufferValue = 0;\n        this.isLoading.subscribe(res => {\n            console.log(\"LOADING: \", res);\n        });\n    }\n}\nLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: LoaderService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: LoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: LoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass ResponseInterceptor {\n    constructor(loaderService) {\n        this.loaderService = loaderService;\n    }\n    intercept(request, next) {\n        const startTime = new Date().getTime();\n        this.loaderService.isLoading.next(true);\n        return next.handle(request)\n            .pipe(retry(2), map((event) => {\n            const endTime = new Date().getTime();\n            const difference = endTime - startTime;\n            console.log(`${event.url} succeed in ${difference} ms.`);\n            return event;\n        }), catchError$1((error) => {\n            return throwError(() => {\n                new Error('Test');\n            });\n        }), finalize(() => {\n            this.loaderService.isLoading.next(false);\n        }));\n    }\n}\nResponseInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ResponseInterceptor, deps: [{ token: LoaderService }], target: i0.ɵɵFactoryTarget.Injectable });\nResponseInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ResponseInterceptor });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ResponseInterceptor, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: LoaderService }]; } });\n\nclass ProgressComponent {\n    constructor(loader) {\n        this.loader = loader;\n        this.color = 'primary';\n        this.mode = 'buffer';\n        this.value = 50;\n        this.bufferValue = 75;\n        this.loading = false;\n    }\n    ngOnInit() {\n        this.loader.isLoading.subscribe(res => {\n            this.loading = res;\n            this.value = this.loader.progress;\n            this.bufferValue = this.loader.bufferValue;\n        });\n    }\n}\nProgressComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ProgressComponent, deps: [{ token: LoaderService }], target: i0.ɵɵFactoryTarget.Component });\nProgressComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ProgressComponent, selector: \"lib-progress\", ngImport: i0, template: \"\\n\\n  <div *ngIf=\\\"true\\\" class=\\\"progress\\\">\\n      \\n      <section class=\\\"example-section\\\">\\n        <mat-progress-bar\\n            class=\\\"example-margin\\\"\\n            [color]=\\\"color\\\"\\n            [mode]=\\\"mode\\\"\\n            [value]=\\\"loader.progress\\\"\\n            [bufferValue]=\\\"loader.bufferValue\\\">\\n        </mat-progress-bar>\\n      </section>\\n  </div>\", styles: [\".example-h2{margin:10px}.example-section{display:flex;align-content:center;align-items:center;height:60px}.example-margin{margin:0 10px}.progress{width:100%;background-color:orange;z-index:1000;position:absolute}\\n\"], components: [{ type: i2.MatProgressBar, selector: \"mat-progress-bar\", inputs: [\"color\", \"value\", \"bufferValue\", \"mode\"], outputs: [\"animationEnd\"], exportAs: [\"matProgressBar\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ProgressComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-progress', template: \"\\n\\n  <div *ngIf=\\\"true\\\" class=\\\"progress\\\">\\n      \\n      <section class=\\\"example-section\\\">\\n        <mat-progress-bar\\n            class=\\\"example-margin\\\"\\n            [color]=\\\"color\\\"\\n            [mode]=\\\"mode\\\"\\n            [value]=\\\"loader.progress\\\"\\n            [bufferValue]=\\\"loader.bufferValue\\\">\\n        </mat-progress-bar>\\n      </section>\\n  </div>\", styles: [\".example-h2{margin:10px}.example-section{display:flex;align-content:center;align-items:center;height:60px}.example-margin{margin:0 10px}.progress{width:100%;background-color:orange;z-index:1000;position:absolute}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: LoaderService }]; } });\n\nclass ApiLibModule {\n}\nApiLibModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ApiLibModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nApiLibModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ApiLibModule, declarations: [ApiLibComponent,\n        ProgressComponent], imports: [HttpClientModule,\n        HttpClientJsonpModule,\n        MatProgressBarModule,\n        CommonModule], exports: [CommonModule,\n        ApiLibComponent,\n        ProgressComponent,\n        MatProgressBarModule] });\nApiLibModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ApiLibModule, providers: [\n        CacheResolverService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: CustomHeaderInterceptor,\n            multi: true\n        },\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: CacheInterceptor,\n            multi: true\n        },\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ErrorInterceptor,\n            multi: true\n        },\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ResponseInterceptor,\n            multi: true\n        }\n    ], imports: [[\n            HttpClientModule,\n            HttpClientJsonpModule,\n            MatProgressBarModule,\n            CommonModule,\n        ], CommonModule,\n        MatProgressBarModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ApiLibModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ApiLibComponent,\n                        ProgressComponent,\n                    ],\n                    imports: [\n                        HttpClientModule,\n                        HttpClientJsonpModule,\n                        MatProgressBarModule,\n                        CommonModule,\n                    ],\n                    exports: [\n                        CommonModule,\n                        ApiLibComponent,\n                        ProgressComponent,\n                        MatProgressBarModule,\n                    ],\n                    providers: [\n                        CacheResolverService,\n                        {\n                            provide: HTTP_INTERCEPTORS,\n                            useClass: CustomHeaderInterceptor,\n                            multi: true\n                        },\n                        {\n                            provide: HTTP_INTERCEPTORS,\n                            useClass: CacheInterceptor,\n                            multi: true\n                        },\n                        {\n                            provide: HTTP_INTERCEPTORS,\n                            useClass: ErrorInterceptor,\n                            multi: true\n                        },\n                        {\n                            provide: HTTP_INTERCEPTORS,\n                            useClass: ResponseInterceptor,\n                            multi: true\n                        }\n                    ]\n                }]\n        }] });\n\nconst BASICTOKEN = 'eXV6ZWVfY2xpZW50OjI5MDIzNmNmLTgxZDItNDg5MS1hYmNlLWYzZmUzYzA5NWMxMA==';\n//export const SERVER_IP = 'backend-development.digitalmall.app';\nconst SERVER_IP = 'backend-development.digitalmall.app';\n\nclass JGSApiService {\n    // CONSTRUCTOR API SERVICE\n    constructor(http, loader) {\n        this.http = http;\n        this.loader = loader;\n        this.tokenName = 'dm-token';\n        this.language = 'lang';\n        this.getTokenUrl = 'sessions/token';\n        this.appBaseUrl = `https://${SERVER_IP}/api/`;\n        this.getTokenAccess = {};\n        this.headersConfig = {};\n        this.errorSubscriber = new Subject();\n        this.postImages = (route) => {\n            return this.http.post(this.appBaseUrl + route.apiroute, route.data, {\n                headers: this.headersConfig,\n                reportProgress: true,\n                observe: 'events',\n            })\n                .subscribe(event => {\n                if (event.type === HttpEventType.UploadProgress) {\n                    let progress = Math.round(event.loaded / event.total * 100) + '%';\n                    this.loader.progress = Math.round(event.loaded / event.total * 100);\n                    console.log(\"PROGRESS: \", progress);\n                    this.loader.isLoading.next(true);\n                    //console.log('Uploading:' + Math.round(event.loaded/ event.total! *100) + '%');\n                    if (event.loaded == event.total) {\n                        this.loader.isLoading.next(false);\n                        console.log(\"Event Loaded\", event);\n                    }\n                }\n            });\n        };\n    }\n    getRequestTest() {\n        return this.http\n            .get('https://backend-development.digitalmall.app/api/vehicle-for-sale/post-statuses', { responseType: 'text' })\n            .pipe(tap({\n            next: (data) => console.log(data),\n        }));\n    }\n}\nJGSApiService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: JGSApiService, deps: [{ token: i1.HttpClient }, { token: LoaderService }], target: i0.ɵɵFactoryTarget.Injectable });\nJGSApiService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: JGSApiService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: JGSApiService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: LoaderService }]; } });\n\nclass MediaService {\n    constructor(api) {\n        this.api = api;\n    }\n    uploadFile(formData, media_type, entity_id) {\n        let apiRoute = {};\n        apiRoute.apiroute = `storage/${media_type}/${entity_id}`;\n        apiRoute.data = formData;\n        return this.api.postImages(apiRoute);\n    }\n}\nMediaService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MediaService, deps: [{ token: JGSApiService }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MediaService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MediaService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: JGSApiService }]; } });\n\n/*\n * Public API Surface of api-lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ApiLibComponent, ApiLibModule, MediaService, ProgressComponent };\n"]},"metadata":{},"sourceType":"module"}